<project name="staroski-architecture-tools" default="jar" basedir=".">

	<!-- Defining properties -->
	<property name="src.dir" location="src" />
	<property name="resources.dir" location="resources" />
	<property name="lib.dir" location="lib" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="main-class" value="br.com.staroski.tools.Execute" />
	<property name="javac.source" value="17" />
	<property name="javac.target" value="17" />

	<!-- Defining the module path -->
	<path id="module.path">
		<!-- Add all the necessary module JARs here -->
		<pathelement location="${lib.dir}/javaparser-core-3.25.9.jar"/>
		<pathelement location="${lib.dir}/javaparser-symbol-solver-core-3.25.9.jar"/>
		<pathelement location="${lib.dir}/jcommon-1.0.23.jar"/>
		<pathelement location="${lib.dir}/jfreechart-1.0.19.jar"/>
	</path>

	<!-- Creating the necessary directories -->
	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- Compiling the Java files -->
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}"
			   destdir="${build.dir}"
			   source="${javac.source}"
			   target="${javac.target}"
		       includeantruntime="false"
			   modulepathref="module.path">
		</javac>
	</target>

	<!-- Copying the resources -->
	<target name="copy-resources" depends="compile">
		<copy todir="${build.dir}/images">
			<fileset dir="${resources.dir}/images" includes="**/*" />
		</copy>
		<copy todir="${build.dir}/properties">
			<fileset dir="${resources.dir}/properties" includes="**/*" />
		</copy>
	</target>

	<!-- Copying the dependencies (JARs) to the build directory -->
	<target name="copy-libs" depends="copy-resources">
		<copy todir="${build.dir}/lib">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</copy>
	</target>

	<!-- Creating the executable JAR -->
	<target name="jar" depends="copy-libs">
		<jar destfile="${dist.dir}/staroski-architecture-tools.jar" basedir="${build.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
			<!-- Including libraries in the JAR -->
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
		</jar>
		
        <!-- After creating the JAR, execute the clean target -->
        <antcall target="clean"/>
	</target>

	<!-- Cleaning the build directory -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>
</project>
